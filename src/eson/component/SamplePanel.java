/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package eson.component;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;

/**
 *
 * @author Codey Hyacinth
 */
public class SamplePanel extends javax.swing.JPanel {
    
    private String text;
    private ImageIcon icon;
    private Font font;
    private Color hoverBackground;
    private Color hoverForeground;
    private Color normalBackground;
    private Color normalForeground;
    private Color selectionBackground;
    private Color selectionForeground;

    /**
     * @return the hoverBackground
     */
    public Color getHoverBackground() {
        return hoverBackground;
    }

    /**
     * @param hoverBackground the hoverBackground to set
     */
    public void setHoverBackground(Color hoverBackground) {
        this.hoverBackground = hoverBackground;
    }

    /**
     * @return the hoverForeground
     */
    public Color getHoverForeground() {
        return hoverForeground;
    }

    /**
     * @param hoverForeground the hoverForeground to set
     */
    public void setHoverForeground(Color hoverForeground) {
        this.hoverForeground = hoverForeground;
    }

    /**
     * @return the normalBackground
     */
    public Color getNormalBackground() {
        return normalBackground;
    }

    /**
     * @param normalBackground the normalBackground to set
     */
    public void setNormalBackground(Color normalBackground) {
        this.normalBackground = normalBackground;
    }

    /**
     * @return the normalForeground
     */
    public Color getNormalForeground() {
        return normalForeground;
    }

    /**
     * @param normalForeground the normalForeground to set
     */
    public void setNormalForeground(Color normalForeground) {
        this.normalForeground = normalForeground;
    }

    /**
     * @return the selectionBackground
     */
    public Color getSelectionBackground() {
        return selectionBackground;
    }

    /**
     * @param selectionBackground the selectionBackground to set
     */
    public void setSelectionBackground(Color selectionBackground) {
        this.selectionBackground = selectionBackground;
    }

    /**
     * @return the selectionForeground
     */
    public Color getSelectionForeground() {
        return selectionForeground;
    }

    /**
     * @param selectionForeground the selectionForeground to set
     */
    public void setSelectionForeground(Color selectionForeground) {
        this.selectionForeground = selectionForeground;
    }

    /**
     * @return the text
     */
    public String getText() {
        return text;
    }

    /**
     * @param text the text to set
     */
    public void setText(String text) {
        this.text = text;
    }

    /**
     * @return the icon
     */
    public ImageIcon getIcon() {
        return icon;
    }

    /**
     * @param icon the icon to set
     */
    public void setIcon(ImageIcon icon) {
        this.icon = icon;
    }

    /**
     * @return the font
     */
    @Override
    public Font getFont() {
        return font==null?getFont():font;
    }

    /**
     * @param font the font to set
     */
    @Override
    public void setFont(Font font) {
        this.font = font;
    }

    /**
     * Creates new form SamplePanel
     */
    public SamplePanel() {
        initComponents();
        addMouseListener(new MouseAdapter() {
            @Override public void mouseEntered(MouseEvent e) {
            }

            @Override public void mouseExited(MouseEvent e) {
            }
        });
    }
    
    @Override
    public void paintComponent(Graphics g){
        super.paint(g);
        Graphics2D g2d = (Graphics2D)g.create();
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setFont(font);
        g2d.setColor(normalBackground);
        g2d.fillRect(0, 0, getWidth(), getHeight());
        g2d.setColor(normalForeground);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
